# ================================ PLEASE READ ===========================================================
# This file outlines all the possible environment variables supported by the DoubleU app for self hosting.
#
# If you're a developer setting up your local environment, please use `.env.local.example` instead.
# ========================================================================================================

# Required self-hosting vars
# --------------------------------------------------------------------------------------------------------

# Enables self hosting features (should be set to true unless you know what you're doing)
SELF_HOSTED=true

# Secret key used to encrypt credentials (https://api.rubyonrails.org/v7.1.3.2/classes/Rails/Application.html#method-i-secret_key_base)
# Has to be a random string, generated eg. by running `openssl rand -hex 64`
SECRET_KEY_BASE=secret-value

# Optional self-hosting vars
# --------------------------------------------------------------------------------------------------------

# Custom port config
# For users who have other applications listening at 3000, this allows them to set a value puma will listen to.
PORT=3000

# SMTP Configuration
# This is only needed if you intend on sending emails from your DoubleU instance (such as for password resets or email financial reports).
# Resend.com is a good option that offers a free tier for sending emails.
SMTP_ADDRESS=
SMTP_PORT=465
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_TLS_ENABLED=true

# Address that emails are sent from
EMAIL_SENDER=

# Email Configuration
# Whether to require email confirmation for new user registrations
REQUIRE_EMAIL_CONFIRMATION=true

# Database Configuration
DB_HOST=localhost # May need to be changed to `DB_HOST=db` if using devcontainer
DB_PORT=5432
POSTGRES_PASSWORD=postgres
POSTGRES_USER=postgres
POSTGRES_DB=wf_production # Database name (defaults to wf_development, wf_test, wf_production based on environment)

# App Domain
# This is the domain that your DoubleU instance will be hosted at. It is used to generate links in emails and other places.
APP_DOMAIN=

# Disable enforcing SSL connections
# DISABLE_SSL=true

# SSL Configuration (Production)
# Force all access to the app over SSL
RAILS_FORCE_SSL=true
# Assume all access is happening through a SSL-terminating reverse proxy
RAILS_ASSUME_SSL=true

# Performance Configuration
# Maximum number of database connections and threads
RAILS_MAX_THREADS=3
# Number of Puma worker processes (production only)
WEB_CONCURRENCY=1

# Active Record Encryption Keys (Optional)
# These keys are used to encrypt sensitive data like API keys in the database.
# If not provided, they will be automatically generated based on your SECRET_KEY_BASE.
# You can generate your own keys by running: rails db:encryption:init
# ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=
# ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=
# ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=

# ======================================================================================================
# Active Storage Configuration - responsible for storing file uploads
# ======================================================================================================
#
# * Defaults to disk storage but you can also use Amazon S3 or Cloudflare R2
# * Set the appropriate environment variables to use these services.
# * Ensure libvips is installed on your system for image processing - https://github.com/libvips/libvips
#
# Amazon S3
# ==========
# ACTIVE_STORAGE_SERVICE=amazon <- Enables Amazon S3 storage
# S3_ACCESS_KEY_ID=
# S3_SECRET_ACCESS_KEY=
# S3_REGION= # defaults to `us-east-1` if not set
# S3_BUCKET=
#
# Cloudflare R2
# =============
# ACTIVE_STORAGE_SERVICE=cloudflare <- Enables Cloudflare R2 storage
# CLOUDFLARE_ACCOUNT_ID=
# CLOUDFLARE_ACCESS_KEY_ID=
# CLOUDFLARE_SECRET_ACCESS_KEY=
# CLOUDFLARE_BUCKET=

# ======================================================================================================
# AI Assistant Configuration (Optional)
# ======================================================================================================
#
# OpenAI Configuration for AI financial assistant features
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_ACCESS_TOKEN=
OPENAI_ORGANIZATION_ID=

# ======================================================================================================
# Bank Integration Configuration (Optional)
# ======================================================================================================
#
# Plaid Configuration for US/Canada bank connections
# Get your credentials from: https://dashboard.plaid.com/
PLAID_CLIENT_ID=
PLAID_SECRET=
PLAID_ENV=sandbox # Options: sandbox, development, production

# Plaid EU Configuration for European bank connections
PLAID_EU_CLIENT_ID=
PLAID_EU_SECRET=

# Mono Configuration for Nigerian bank connections
# Get your credentials from: https://mono.co/
MONO_SECRET_KEY=
MONO_PUBLIC_KEY=

# Wise Configuration for exchange rates
# Get your API key from: https://wise.com/
WISE_API_KEY=
WISE_BASE_URL= # Optional: defaults to sandbox URL

# ======================================================================================================
# Payment Processing Configuration (Optional)
# ======================================================================================================
#
# Stripe Configuration for payment processing
# Get your credentials from: https://dashboard.stripe.com/
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# ======================================================================================================
# Monitoring & Logging Configuration (Optional)
# ======================================================================================================
#
# Sentry Configuration for error tracking and performance monitoring
# Get your DSN from: https://sentry.io/
SENTRY_DSN=

# Logtail Configuration for centralized logging
# Get your credentials from: https://logtail.com/
LOGTAIL_API_KEY=
LOGTAIL_INGESTING_HOST=

# Log level (debug, info, warn, error, fatal)
RAILS_LOG_LEVEL=info

# ======================================================================================================
# Redis Configuration (Optional)
# ======================================================================================================
#
# Main Redis URL for ActionCable, Sidekiq, and sessions
REDIS_URL=redis://localhost:6379/1

# Separate Redis instance for caching (optional)
CACHE_REDIS_URL=redis://localhost:6379/2

# ======================================================================================================
# Sidekiq Web UI Configuration (Optional)
# ======================================================================================================
#
# Credentials for accessing the Sidekiq web interface at /sidekiq
# Only applies in production environment
SIDEKIQ_WEB_USERNAME=admin
SIDEKIQ_WEB_PASSWORD=secure_password

# ======================================================================================================
# Development & Testing Configuration
# ======================================================================================================
#
# Webhook URLs for development (when not using production URLs)
DEV_WEBHOOKS_URL=

# Demo data seed for generating sample data
DEMO_DATA_SEED=

# Process ID file location
PIDFILE=

# Coverage reporting
COVERAGE=true

# Performance benchmarking
BENCHMARKING_ENABLED=true
ENDPOINT=/
COLD_WARMUP=0
COLD_ITERATIONS=1
WARM_WARMUP=5
WARM_TIME=10

# Disable test parallelization
DISABLE_PARALLELIZATION=true

# PostgreSQL SSL mode (for development/testing)
PGGSSENCMODE=disable
