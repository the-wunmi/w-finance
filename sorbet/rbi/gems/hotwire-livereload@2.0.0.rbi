# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `hotwire-livereload` gem.
# Please instead update this file by running `bin/tapioca gem hotwire-livereload`.


# source://hotwire-livereload//lib/hotwire/livereload/cable_server.rb#1
module Hotwire; end

# source://hotwire-livereload//lib/hotwire/livereload/cable_server.rb#2
module Hotwire::Livereload
  class << self
    # source://hotwire-livereload//lib/hotwire/livereload.rb#31
    def action_cable(opts); end

    # source://hotwire-livereload//lib/hotwire/livereload.rb#27
    def cable_server; end

    # source://hotwire-livereload//lib/hotwire/livereload.rb#46
    def debounce(wait_ms, &block); end

    # @return [Boolean]
    #
    # source://hotwire-livereload//lib/hotwire/livereload.rb#42
    def enabled?; end

    # source://hotwire-livereload//lib/hotwire/livereload/engine.rb#4
    def railtie_helpers_paths; end

    # source://hotwire-livereload//lib/hotwire/livereload/engine.rb#4
    def railtie_namespace; end

    # source://hotwire-livereload//lib/hotwire/livereload/engine.rb#4
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # @return [Boolean]
    #
    # source://hotwire-livereload//lib/hotwire/livereload.rb#35
    def server_process?; end

    # source://hotwire-livereload//lib/hotwire/livereload/engine.rb#4
    def table_name_prefix; end

    # source://hotwire-livereload//lib/hotwire/livereload.rb#18
    def turbo_stream(locals); end

    # source://hotwire-livereload//lib/hotwire/livereload/engine.rb#4
    def use_relative_model_naming?; end
  end
end

# source://hotwire-livereload//lib/hotwire/livereload/cable_server.rb#3
class Hotwire::Livereload::CableServer < ::ActionCable::Server::Base
  # @return [CableServer] a new instance of CableServer
  #
  # source://hotwire-livereload//lib/hotwire/livereload/cable_server.rb#4
  def initialize; end
end

# source://hotwire-livereload//lib/hotwire/livereload.rb#15
Hotwire::Livereload::DISABLE_FILE = T.let(T.unsafe(nil), String)

# source://hotwire-livereload//lib/hotwire/livereload/engine.rb#3
class Hotwire::Livereload::Engine < ::Rails::Engine; end

# source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#3
class Hotwire::Livereload::Middleware
  # @return [Middleware] a new instance of Middleware
  #
  # source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#4
  def initialize(app); end

  # source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#8
  def call(env); end

  private

  # source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#30
  def get_response_body(response); end

  # @return [Boolean]
  #
  # source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#26
  def html_response?(headers); end

  # source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#36
  def inject_livereload_scripts(body, request); end

  # source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#44
  def livereload_scripts(request); end

  # source://hotwire-livereload//lib/hotwire/livereload/middleware.rb#40
  def view_helpers; end
end

class Hotwire::Livereload::ReloadChannel < ::ActionCable::Channel::Base
  def subscribed; end
end

# source://hotwire-livereload//lib/hotwire/livereload/version.rb#3
Hotwire::Livereload::VERSION = T.let(T.unsafe(nil), String)
