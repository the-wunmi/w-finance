# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.


module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def accept_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accountable_sparkline_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def address_property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_auth_login_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_auth_refresh_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_auth_signup_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_chat_messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_chat_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_chats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_transaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_transactions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_usage_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apply_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def apply_template_import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def approve_impersonation_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def balances_property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def bootstrap_categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def budget_budget_categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def budget_budget_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def budgets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_deletions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_dropdown_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def changelog_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def chat_messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def chat_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def chats_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_cache_settings_hosting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def clear_filter_transactions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def complete_impersonation_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_create_valuations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def confirm_update_valuation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def credit_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def credit_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def crypto_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def cryptos_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def currency_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def current_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def depositories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def depository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_all_categories_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_all_rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_all_tags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def disable_mfa_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def download_family_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_budget_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_chat_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_credit_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_crypto_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_depository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_external_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_family_merchant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_investment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_loan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_oauth_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_other_asset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_other_liability_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_vehicle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def entry_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def external_items_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def family_exports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def family_merchant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def family_merchants_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def feedback_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def goals_onboarding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def holding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def holdings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def impersonation_sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_clean_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_configuration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_confirm_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_mapping_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_row_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_upload_sample_csv_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_upload_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def imports_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def investment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def investments_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invitations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def invite_codes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def join_impersonation_sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def leave_impersonation_sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def loan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def loans_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def lookbook_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def mfa_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def native_oauth_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_category_deletion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_chat_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_credit_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_crypto_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_depository_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_email_confirmation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_external_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_family_export_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_family_merchant_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_holding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_investment_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_invitation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_loan_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_mfa_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_oauth_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_other_asset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_other_liability_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_settings_api_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_tag_deletion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_trade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_transaction_transfer_match_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_transaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_transactions_bulk_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_valuation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_vehicle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_authorization_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_authorized_application_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_authorized_applications_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_introspect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_revoke_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_token_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def oauth_token_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def onboarding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def other_asset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def other_assets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def other_liabilities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def other_liability_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_reset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def picker_budgets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preferences_onboarding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_component_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def preview_view_components_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def privacy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def publish_import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pwa_manifest_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pwa_service_worker_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def redis_configuration_error_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def registration_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reject_impersonation_session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reset_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def retry_api_v1_chat_messages_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def retry_chat_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def revert_import_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rule_prompt_settings_user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rule_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rules_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def securities_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def session_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sessions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_api_key_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_billing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_hosting_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_preferences_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_profile_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_security_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sidekiq_web_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sparkline_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def success_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_all_accounts_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_external_item_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tag_deletions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tag_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tags_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def terms_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def toggle_active_account_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trade_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trades_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transaction_category_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transaction_transfer_match_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transaction_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transactions_bulk_deletion_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transactions_bulk_update_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transactions_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfer_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def transfers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def trial_onboarding_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_address_property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_balances_property_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def upgrade_subscription_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def valuation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def valuations_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def vehicle_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def vehicles_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def verify_mfa_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def webhooks_plaid_eu_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def webhooks_plaid_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def webhooks_stripe_url(*args); end
end
